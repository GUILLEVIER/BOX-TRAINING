// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
// Definir paletas de colores personalizadas para Angular Material
$box-training-primary-palette: (
  50: #e8f4f5,
  100: #c6e3e6,
  200: #a0d0d5,
  300: #7abdc4,
  400: #5eb0b7,
  500: #3c6e71,
  // Color principal
  600: #366267,
  700: #2e535a,
  800: #26444d,
  900: #1a2e33,
  A100: #a0d0d5,
  A200: #7abdc4,
  A400: #5eb0b7,
  A700: #2e535a,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: rgba(black, 0.87),
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
    A100: rgba(black, 0.87),
    A200: rgba(black, 0.87),
    A400: white,
    A700: white,
  ),
);

$box-training-accent-palette: (
  50: #e7ebef,
  100: #c4cdd6,
  200: #9dacbb,
  300: #758ba0,
  400: #57728b,
  500: #284b63,
  // Color accent
  600: #24445b,
  700: #1e3b51,
  800: #183247,
  900: #0f2135,
  A100: #9dacbb,
  A200: #758ba0,
  A400: #57728b,
  A700: #1e3b51,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: white,
    400: white,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
    A100: rgba(black, 0.87),
    A200: white,
    A400: white,
    A700: white,
  ),
);

$box-training-warn-palette: (
  50: #ffebea,
  100: #ffcdca,
  200: #ff9c97,
  300: #ff6b64,
  400: #ff473e,
  500: #ff3c38,
  // Color error
  600: #ff2418,
  700: #e8170d,
  800: #d40b02,
  900: #b80000,
  A100: #ff9c97,
  A200: #ff6b64,
  A400: #ff473e,
  A700: #e8170d,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: white,
    400: white,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
    A100: rgba(black, 0.87),
    A200: white,
    A400: white,
    A700: white,
  ),
);

$box-training-error-palette: (
  50: #ffebea,
  100: #ffcdca,
  200: #ff9c97,
  300: #ff6b64,
  400: #ff473e,
  500: #ff3c38,
  // Color error
  600: #ff2418,
  700: #e8170d,
  800: #d40b02,
  900: #b80000,
  A100: #ff9c97,
  A200: #ff6b64,
  A400: #ff473e,
  A700: #e8170d,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: white,
    400: white,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
    A100: rgba(black, 0.87),
    A200: white,
    A400: white,
    A700: white,
  ),
);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$box-training-theme: mat.define-light-theme(
  (
    color: (
      primary: mat.define-palette($box-training-primary-palette),
      accent: mat.define-palette($box-training-accent-palette),
      warn: mat.define-palette($box-training-warn-palette),
      error: mat.define-palette($box-training-error-palette),
    ),
    typography:
      mat.define-typography-config(
        $font-family: '"Rubik", "Roboto", "Helvetica Neue", sans-serif',
      ),
    density: 0,
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($box-training-theme);

/* Variables globales */
:root {
  --box-training-primary: #3c6e71;
  --box-training-accent: #284b63;
  --box-training-error: #ff3c38;
  --box-training-warn: #ff3c38;
  --box-training-black: #353535;
  --box-training-white: #fff;
  --box-training-background: #d9d9d9;
}

/* Reset y estilos globales */
* {
  box-sizing: border-box;
}

html,
body {
  font-family: 'Rubik', 'Roboto', 'Helvetica Neue', sans-serif;
  background-color: var(--box-training-background);
  color: var(--box-training-black);
  line-height: 1.6;
  margin: 0;
  padding: 0;
  height: 100%;
}

// DASHBOARD STYLES GENERICALLY APPLIED
.app-container {
  height: 100vh; /* Full viewport height */
  width: 100vw; /* Full viewport width */
  overflow-x: hidden; /* Prevent horizontal scroll */
}

.main-container {
  max-width: 90rem; /* 1440px -> REM para escalabilidad */
  margin: 0 auto;
  padding: 1.5rem; /* 24px -> REM para espaciado */
  background-color: var(--box-training-error);
}

.main-content {
  display: flex;
  flex-direction: column;
}

.stats-section,
.quick-actions-section,
.recent-activity-section {
  margin-bottom: 2.5rem; /* 32px -> REM para espaciado */
}

/* Responsive */
@media (max-width: 48rem) {
  /* 768px -> REM para breakpoints */
  .main-container {
    padding: 1rem; /* 16px -> REM para espaciado */
  }
}

/* Estilos PWA específicos */
.update-snackbar {
  background-color: var(--box-training-primary) !important;
  color: var(--box-training-white) !important;
}

.update-snackbar .mat-mdc-snack-bar-action {
  color: var(--box-training-accent) !important;
}

/* Animaciones para componentes PWA */
@keyframes slideIn {
  from {
    transform: translateY(100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideDown {
  from {
    transform: translateY(-100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

/* Clases para animaciones PWA */
.slide-in {
  animation: slideIn 0.3s ease-out;
}

.slide-down {
  animation: slideDown 0.3s ease-out;
}

/* Estilos para modo offline */
.offline-mode {
  filter: grayscale(0.4);
}

.offline-banner {
  background: linear-gradient(45deg, var(--box-training-error), var(--box-training-warn));
  color: var(--box-training-white);
  text-align: center;
  padding: 0.5rem; /* 8px -> REM para espaciado */
  font-size: 0.875rem; /* 14px -> REM para tipografía */
}

/* Optimización para PWA en móviles */
@media (display-mode: standalone) {
  /* Estilos específicos cuando se ejecuta como PWA */
  body {
    user-select: none; /* Prevenir selección de texto */
    -webkit-touch-callout: none; /* iOS: prevenir callout al tocar */
  }

  /* Agregar padding superior para el status bar en iOS */
  .app-container {
    padding-top: env(safe-area-inset-top);
    padding-bottom: env(safe-area-inset-bottom);
  }
}

/* Estilos para splash screen personalizado */
.splash-screen {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: var(--box-training-primary);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 9999;
}

.splash-logo {
  max-width: 12.5rem; /* 200px -> REM para escalabilidad */
  max-height: 12.5rem; /* 200px -> REM para escalabilidad */
  animation: pulse 2s infinite;
}

@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
  100% {
    transform: scale(1);
  }
}

/* Scrollbar personalizado - PX para elementos pequeños */
::-webkit-scrollbar {
  width: 8px; /* PX para ancho específico */
}

::-webkit-scrollbar-track {
  background: var(--box-training-background);
  border-radius: 4px; /* PX para bordes pequeños */
}

::-webkit-scrollbar-thumb {
  background: var(--box-training-primary);
  border-radius: 4px; /* PX para bordes pequeños */
}

::-webkit-scrollbar-thumb:hover {
  background: var(--box-training-primary);
}
